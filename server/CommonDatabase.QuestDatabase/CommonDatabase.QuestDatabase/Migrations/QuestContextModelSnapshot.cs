// <auto-generated />
using CommonDatabase.QuestDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CommonDatabase.QuestDatabase.Migrations
{
    [DbContext(typeof(QuestContext))]
    partial class QuestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("quest", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("coordinates", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.ToTable("Stage");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.MapStage", b =>
                {
                    b.HasBaseType("GenerateQuestsService.DataContracts.Models.Stages.Stage");

                    b.Property<int>("CoordsId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasIndex("CoordsId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("map_stage", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.QrCodeStage", b =>
                {
                    b.HasBaseType("GenerateQuestsService.DataContracts.Models.Stages.Stage");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("qrcode_stage", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.TestStage", b =>
                {
                    b.HasBaseType("GenerateQuestsService.DataContracts.Models.Stages.Stage");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("test_stage", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.TextStage", b =>
                {
                    b.HasBaseType("GenerateQuestsService.DataContracts.Models.Stages.Stage");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("text_stage", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.VideoStage", b =>
                {
                    b.HasBaseType("GenerateQuestsService.DataContracts.Models.Stages.Stage");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("video_stage", (string)null);
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.Stage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Quest", "Quest")
                        .WithMany("Stages")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.MapStage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Coordinates", "Coords")
                        .WithMany()
                        .HasForeignKey("CoordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Stage", null)
                        .WithOne()
                        .HasForeignKey("GenerateQuestsService.DataContracts.Models.Stages.MapStage", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coords");
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.QrCodeStage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Stage", null)
                        .WithOne()
                        .HasForeignKey("GenerateQuestsService.DataContracts.Models.Stages.QrCodeStage", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.TestStage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Stage", null)
                        .WithOne()
                        .HasForeignKey("GenerateQuestsService.DataContracts.Models.Stages.TestStage", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.TextStage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Stage", null)
                        .WithOne()
                        .HasForeignKey("GenerateQuestsService.DataContracts.Models.Stages.TextStage", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Stages.VideoStage", b =>
                {
                    b.HasOne("GenerateQuestsService.DataContracts.Models.Stages.Stage", null)
                        .WithOne()
                        .HasForeignKey("GenerateQuestsService.DataContracts.Models.Stages.VideoStage", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenerateQuestsService.DataContracts.Models.Quest", b =>
                {
                    b.Navigation("Stages");
                });
#pragma warning restore 612, 618
        }
    }
}
